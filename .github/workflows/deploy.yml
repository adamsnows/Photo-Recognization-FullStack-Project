name: Deploy Backend and Frontend

on:
  push:
    branches:
      - main

jobs:
  backend-deploy:
    if: contains(join(github.event.head_commit.modified, ','), 'backend/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Set up Google Cloud credentials
        run: echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" | base64 --decode > google-service-account.json

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker gcr.io --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        run: >
          docker buildx build --platform linux/amd64
          --tag gcr.io/adam-456215/photos-api
          --file ./backend/Dockerfile
          --push
          ./backend

      - name: Deploy to Google Cloud Run
        working-directory: ./backend
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BASE_URL: ${{ secrets.BASE_URL }}
          PORT: ${{ secrets.PORT }}
          API_URL: ${{ secrets.API_URL }}
          HOST: ${{ secrets.HOST }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: npm run release

  frontend-deploy:
    if: contains(join(github.event.head_commit.modified, ','), 'frontend/')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - name: Install dependencies
        run: |
          npm install
          npm install -g vercel

      - name: Deploy to Vercel
        run: vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
