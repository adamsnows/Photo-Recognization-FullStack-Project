name: Deploy to GCP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
        
      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker gcr.io --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64 -t gcr.io/adam-456215/photos-api ./backend --file ./backend/Dockerfile \
          --build-arg NODE_ENV=${{ secrets.NODE_ENV }} \
          --build-arg POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --build-arg BASE_URL=${{ secrets.BASE_URL }} \
          --build-arg PORT=${{ secrets.PORT }} \
          --build-arg API_URL=${{ secrets.API_URL }} \
          --build-arg HOST=${{ secrets.HOST }} \
          --push


      - name: Push Docker image to GCR
        run: |
            docker push gcr.io/adam-456215/photos-api

      - name: Deploy to Google Cloud Run
        working-directory: ./backend
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BASE_URL: ${{ secrets.BASE_URL }}
          PORT: ${{ secrets.PORT }}
          API_URL: ${{ secrets.API_URL }}
          HOST: ${{ secrets.HOST }}
        run: |
          npm run release